<?xml version="1.0" encoding="UTF-8"?>
<!-- This template is for creating an Internet Draft using xml2rfc,
     which is available here: http://xml.resource.org. -->
<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [
<!-- One method to get references from the online citation libraries.
     There has to be one entity for each item to be referenced. 
     An alternate method (rfc include) is described in the references. -->

<!ENTITY RFC1995 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.1995.xml">
<!ENTITY RFC2119 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.2119.xml">
<!ENTITY RFC2845 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.2845.xml">
]>
<?xml-stylesheet type='text/xsl' href='rfc2629.xslt' ?>
<!-- used by XSLT processors -->
<!-- For a complete list and description of processing instructions (PIs), 
     please see http://xml.resource.org/authoring/README.html. -->
<!-- Below are generally applicable Processing Instructions (PIs) that most I-Ds might want to use.
     (Here they are set differently than their defaults in xml2rfc v1.32) -->
<?rfc strict="yes" ?>
<!-- give errors regarding ID-nits and DTD validation -->
<!-- control the table of contents (ToC) -->
<?rfc toc="yes"?>
<!-- generate a ToC -->
<?rfc tocdepth="4"?>
<!-- the number of levels of subsections in ToC. default: 3 -->
<!-- control references -->
<?rfc symrefs="yes"?>
<!-- use symbolic references tags, i.e, [RFC2119] instead of [1] -->
<?rfc sortrefs="yes" ?>
<!-- sort the reference entries alphabetically -->
<!-- control vertical white space 
     (using these PIs as follows is recommended by the RFC Editor) -->
<?rfc compact="yes" ?>
<!-- do not start each main section on a new page -->
<?rfc subcompact="no" ?>
<!-- keep one blank line between list items -->
<!-- end of list of popular I-D processing instructions -->
<rfc category="std" docName="draft-kerr-ixfr-only-00" ipr="trust200811" updates="1995">
  <!-- category values: std, bcp, info, exp, and historic
     ipr values: full3667, noModification3667, noDerivatives3667
     you can add the attributes updates="NNNN" and obsoletes="NNNN" 
     they will automatically be output with "(if approved)" -->

  <!-- ***** FRONT MATTER ***** -->

  <front>
    <!-- The abbreviated title is used in the page header - it is only necessary if the 
         full title is longer than 39 characters -->

    <title abbrev="IXFR-ONLY">IXFR-ONLY to Prevent IXFR Fallback to AXFR
    </title>

    <!-- add 'role="editor"' below for the editors if appropriate -->

    <!-- Another author who claims to be an editor -->

    <!-- XXX: this should be Ond&#345;ej, Sur&yacute;but 
              the IETF is Unicode-phobic -->
    <author fullname="Ondrej Sury" initials="O.S." surname="Sury">
      <organization>CZ.NIC</organization>

      <address>
        <postal>
          <street>Americka 23</street>

          <!-- Reorder these if your country does things differently -->

          <city>120 00 Praha 2</city>

          <country>CZ</country>
        </postal>

        <phone>+420 222 745 110</phone>

        <email>ondrej.sury@nic.cz</email>

        <!-- uri and facsimile elements may also be added -->
      </address>
    </author>

    <author fullname="Shane Kerr" initials="S.K." role="editor"
            surname="Kerr">
      <organization>ISC</organization>

      <address>
        <postal>
          <street>Bennebrokestraat 17-I</street>

          <!-- Reorder these if your country does things differently -->

          <city>1015 PE Amsterdam</city>

          <country>NL</country>
        </postal>

        <phone>+31 64 6336297</phone>

        <email>shane@isc.org</email>

      </address>
    </author>

    <date month="February" year="2010" />

    <!-- If the month and year are both specified and are the current ones, xml2rfc will fill 
         in the current day for you. If only the current year is specified, xml2rfc will fill 
	 in the current day and month for you. If the year is not the current one, it is 
	 necessary to specify at least a month (xml2rfc assumes day="1" if not specified for the 
	 purpose of calculating the expiry date).  With drafts it is normally sufficient to 
	 specify just the year. -->

    <!-- Meta-data Declarations -->

    <area>Internet</area>

    <workgroup>DNSext Working Group</workgroup>

    <!-- WG name at the upperleft corner of the doc,
         IETF is fine for individual submissions.  
	 If this element is not present, the default is "Network Working Group",
         which is used by the RFC Editor as a nod to the history of the IETF. -->

    <keyword>DNS</keyword>
    <keyword>IXFR</keyword>
    <keyword>AXFR</keyword>
    <keyword>IXFR-ONLY</keyword>

    <!-- Keywords will be incorporated into HTML output
         files in a meta tag but they have no effect on text or nroff
         output. If you submit your draft to the RFC Editor, the
         keywords will be used for the search engine. -->

    <abstract>
      <t>This documents proposes a new QTYPE (Query pseudo RRtype) for
	 the Domain Name System (DNS).  IXFR-ONLY is a variant of IXFR
	 (<xref target="RFC1995">RFC&nbsp;1995</xref>) that allows an
	 authoritative server to incrementally update zone content
	 from another (primary) server without falling back from IXFR
	 to AXFR.  This way, alternate peers can be contacted more
	 quickly and convergence of zone content may be achieved much
	 faster in important, resilient operational scenarios.</t>
    </abstract>
  </front>

  <middle>
    <section title="Introduction">
<t>
For large DNS zones, <xref target="RFC1995">RFC&nbsp;1995</xref>
defines Incremental Zone Transfer (IXFR), which allows only to
transfer the changed portion(s) of a zone.
</t>
<t>
In the document, an IXFR client and an IXFR server is defined as
in <xref target="RFC1995">RFC&nbsp;1995</xref>, a secondary name
server which requests IXFR is called an IXFR client and a primary or
secondary name server which responds to the request is called an IXFR
server.
</t>
<t>
IXFR is an efficient way to transfer changes in zones from IXFR
servers to IXFR clients.  However, when an IXFR client has multiple
IXFR servers for a single zone, it is possible that not all IXFR
servers have the zone with same serial number for that zone. In
this case, if an IXFR client attempts an IXFR from an IXFR server
which does not have zone with the serial number used by the IXFR
client, the IXFR server will fall back to a full zone transfer (AXFR)
when it has a version of the zone with serial number greater than
the serial requested by the IXFR client.
</t>
<t>
For example, IXFR server NS1 may have serial numbers 1, 2, and 3 for a
zone, and IXFR server NS2 may have serial numbers 1 and 3 for the same
zone.  An IXFR client that has the zone with serial number 2 which
sends an IXFR request to IXFR server NS2 will get a full zone transfer
(AXFR) of the zone at serial number 3.  This is because NS2 does not
know the zone with serial number 2, and therefore does not know what
the differences are between zone with serial number 2 and 3.
</t>
<t>
If the IXFR client in this example had known to send the query to IXFR
server NS1, then it could have gotten an incremental transfer (IXFR).
But IXFR clients can only know what the latest version of the zone is
at a IXFR server (this information is available via an SOA query).
</t>
<t>
The IXFR-ONLY query type provides a way for the IXFR client to ask
each IXFR server to return an error instead of sending the current
version of the zone via full zone transfer (AXFR).  By using this, a
IXFR client can check each IXFR server until it finds one able to
provide IXFR.
</t>
      <section title="Requirements Language">
        <t>The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
        "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this
        document are to be interpreted as described in <xref
        target="RFC2119">RFC 2119</xref>.</t>
      </section>
    </section>

    <section title="IXFR Server Side">
<t>
A IXFR server receiving a DNS message requesting IXFR-ONLY will reply
as described in <xref target="RFC1995">RFC&nbsp;1995</xref> if it is
able to produce an IXFR for the serial number requested.
</t>
<t>
If the IXFR server is is not able to reply with an IXFR it MUST NOT
reply with an AXFR unless AXFR result is smaller than IXFR result.
Instead, it MUST reply with RCODE CannotIXFR.  (!FIXME)
</t>
<t>
If the IXFR result is larger than an AXFR, then an IXFR server MAY
reply with an AXFR result instead. This is an optimization, and IXFR
servers MAY only reply with AXFR if they are certain that the reply
using AXFR is smaller than an equivalent IXFR reply.
</t>
    </section>

    <section title="IXFR Client Side">
<t>
An IXFR client who wishes to use IXFR-ONLY will send a message to one
of the IXFR servers.  The format is exactly the same as for IXFR,
except the IXFR-ONLY QTYPE code is used instead of the IXFR QTYPE code.
</t>
<t>
If the IXFR server replies with IXFR, then the IXFR client is done.
</t>
<t>
If the IXFR server replies with an RCODE of CannotIXFR, then the IXFR
client proceeds on to a different IXFR server. In this case the IXFR
server implements IXFR-ONLY, but does not have information about zone
with the serial number requested.
</t>
<t>
If the IXFR server replies with any RCODE other than CannotIXFR or
NoError, then the IXFR client proceeds on to a different IXFR server.
In this case the IXFR server does not implement IXFR-ONLY.
</t>
<t>
If the IXFR client attempts IXFR-ONLY to each IXFR server and none of
them reply with an incremental transfer (IXFR), then it should attempt
an IXFR as described in
<xref target="RFC1995">RFC&nbsp;1995</xref> to each of the IXFR
servers which replied with an RCODE other than CannotIXFR or NoError.
</t>
<t>
The method described above allows IXFR clients to operate normally in
situatians where some of the IXFR servers do support IXFR-ONLY, and
some who do not.  IXFR clients MAY remember which IXFR servers support
IXFR-ONLY and query those IXFR servers first.  However since IXFR
servers may change software or even run a mix of software, IXFR
clients MUST attempt to query each IXFR server periodically when they
attempt to get new versions of a zone.
</t>
<t>
Implementations MAY allow IXFR clients to disable IXFR-ONLY for a
given IXFR server, if this is known in advance.  These IXFR servers
are treated as if they replied with an RCODE other than CannotIXFR or
NoError, although no query with IXFR-ONLY is actually sent.
</t>
    </section>
    <section title="Applicability of IXFR-ONLY">
<t>
Implementations SHOULD allow IXFR clients to disable IXFR-ONLY completely.
</t>
<t>
Implementations MAY allow IXFR clients to disable IXFR-ONLY for a
specific zone.  This may be useful for small zones, where fallback to
AXFR is cheap, or in other cases where IXFR-ONLY is causing problems.
</t>
<t>
Usage of IXFR-ONLY may cause IXFR clients to prefer particular IXFR
servers, by shifting load to ones that support IXFR-ONLY.  If this a
problem, then administrators can disable IXFR-ONLY in implementations
that allow it.
</t>
<t>
If a IXFR client has a single IXFR server for a zone, it SHOULD use
IXFR rather than IXFR-ONLY.
</t>
    </section>

    <!-- Possibly a 'Contributors' section ... -->

    <section anchor="IANA" title="IANA Considerations">
<t>
IANA allocates the new IXFR-ONLY QTYPE, which means "incremental
transfer only".  IANA allocates the CannotIXFR RCODE, which means
"Server cannot provide IXFR for zone".
</t>
    </section>

    <section anchor="Security" title="Security Considerations">
      <t>
IXFR-ONLY may be used by someone to get information about the state of
IXFR servers by providing a quick and efficient way to check which
versions of a zone each IXFR server supports.  Zones should be secured via
<xref target="RFC2845">TSIG</xref> to prevent unauthorized information
exposure.  However, even administrators of IXFR servers may not want
this information given to IXFR clients, in which case they will need to
disable IXFR-ONLY.
</t>
    </section>
  </middle>

  <!--  *****BACK MATTER ***** -->

  <back>
    <!-- References split into informative and normative -->

    <!-- There are 2 ways to insert reference entries from the citation libraries:
     1. define an ENTITY at the top, and use "ampersand character"RFC2629; here (as shown)
     2. simply use a PI "less than character"?rfc include="reference.RFC.2119.xml"?> here
        (for I-Ds: include="reference.I-D.narten-iana-considerations-rfc2434bis.xml")

     Both are cited textually in the same manner: by using xref elements.
     If you use the PI option, xml2rfc will, by default, try to find included files in the same
     directory as the including file. You can also define the XML_LIBRARY environment variable
     with a value containing a set of directories to search.  These can be either in the local
     filing system or remote ones accessed by http (http://domain/dir/... ).-->

    <references title="Normative References">
      <!--?rfc include="http://xml.resource.org/public/rfc/bibxml/reference.RFC.2119.xml"?-->
      &RFC2119;

      <!--?rfc include="http://xml.resource.org/public/rfc/bibxml/reference.RFC.2845.xml"?-->
      &RFC2845;

      <!--?rfc include="http://xml.resource.org/public/rfc/bibxml/reference.RFC.1995.xml"?-->
      &RFC1995;

    </references>

    <!-- Change Log
      2009-07-07 version 00
      2009-08-04 version 01
        * Shane Kerr
          -  allow masters to reply with AXFR if they are certain the
             result is smaller than an equivalent IXFR
          - change a lot of MUST -> SHOULD and SHOULD -> MAY
          - grammer nits
        * Ondřej Surý
          - use IXFR client and IXFR server instead of master and slave
          - use 'serial number' instead of just 'serial' as per RFC1912
      -->
  </back>
</rfc>
